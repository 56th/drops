{
//=============================================================
//    DROPS parameter file for twophasedrops
//    simulation of two-phase flow:
//    butanol droplet in water
//=============================================================

//General section
        "General":
        {
                "ProgressBar":  1, //show progress bar
                "DynamicLibsPrefix": "../", //where should we look for shared objects?
                "DynamicLibs": [ //select libraries to be loaded after program start
                        "levelset/liblevelset-twophaseCoeff",
                        "misc/libmisc-scalarFunctions",
                        "misc/libmisc-vectorFunctions"
                ]
        },


// domain and mesh description
        "Mesh":
        {
                "Type": "BrickBuilder",      // A parallelepiped
                "Origin": [0,0,0],           // Origin
                "E1": [1,0,0],               // Basis to span the object,
                "E2": [0,1,0],               // not necessary orthonormal 
                "E3": [0,0,1],               // ... 
                "N1": 4,                     // Number of cells along the E1-direction,
                "N2": 4,                     //                       the E2-direction,
                "N3": 4,                    //                       the E3-direction.
                "RestartFile": "none",    // If set, read the triangulation from the file (via FileBuilderCL).
                                             // and set boundary segments via domain builder (specified in "Type")

                // adaptive refinement
                "AdaptRef":
                {
                    "Freq":                 1,      // number of timesteps before adaptive refinement is carried out.
                    "FinestLevel":          1,      // number of refinement levels and label of the finest level
                                                    // close to the phase boundary.
                    "CoarsestLevel":        0,      // label of coarsest level close to the phase boundary.
                    "Width":                0.4, // domain of refinement.
                    "LoadBalStrategy":      1011    // load balancing method, see decompose.h for details
                }
        },


// time stepping
        "Time":
        {
                "NumSteps":             10,     // number of time steps
                "TEnd":                 0.003,  // simulation time
                //"StepSize":             0.0003, // time step size
                "Scheme":               1,      // choose a specific time discretization
                "Theta":                1       // controls the implicitness of the theta-scheme
                                                // for time discretization of the Navier-Stokes and
                                                // level set equations. Theta = 0 yields the explicit and
                                                // Theta = 1 the implicit Euler method. Theta = 0.5 results
                                                // in the Crank-Nicholson scheme.
        },

// coupling of Navier-Stokes and level set
        "CouplingSolver":
        {
                "Tol":                  1e-10,  // tolerance for the coupling.
                "Iter":                 10,     // maximum number of iterations for the fixed-point iteration.
                                                // ( ! Attention: For Iter = -1 the calculation is carried out
                                                // until convergence).
                "ImplLB":               1,      // implicit Laplace-Beltrami in coupling of Navier-Stokes + Levelset 
                                                // to stabilize fixed-point loop
                "Projection":           0,

                // Navier Stokes solver
                "NavStokesSolver":
                {
                        "Nonlinear":            0,      // determination of the influence of the nonlinear
                                                        // inertia term. For Nonlinear = 0 the linear Stokes
                                                        // equation and for Nonlinear = 1 the full Navier-Stokes
                                                        // equation is solved.
                        "Tol":                  1e-10,  // tolerance for the Navier-Stokes solver.
                        "Iter":                 20,     // maximum number of iterations for the Navier-Stokes solver.
                        "Reduction":            0.1,     // reduction of the Oseen residual by this factor.

                        "OseenSolver":
                        {
                                // TODO: besser Dictionary, das verwendeten Loeser/Vorkonditionierer abbildet
                                "Solver":               10411,  // Stokes solver, cf. num/stokessolverfactory.h
                                "Iter":                 200,    // maximum number of iterations for the solver
                                "Tol":                  1e-10,  // tolerance for the solver
                                "PcAIter":              500,    // maximum number of iterations for the preconditioner
                                                                // of the A-Block
                                "PcATol":               0.01,   // tolerance for the preconditioner of the A-Block
                                "PcSIter":              500,    // maximum number of iterations for the preconditioner
                                                                // of the Schur complement TODO: use in stokessolverfactory
                                "PcSTol":               0.01,   // tolerance for the preconditioner of the Schur complement
                                "UzawaInnerIter":       1000,   // maximum number of iterations for the inner solver (now: inexact uzawa)
                                "UzawaInnerTol":        0.6     // tolerance for the inner solver                    (now: inexact uzawa)
                        }
                },

                // Levelset solver
                "LevelsetSolver":
                {
                        "Tol":                  1e-10,  // tolerance for the level set solver.
                        "Iter":                 1000    // maximum number of iterations for the level set solver.
                }
        },


// flow problem
        "NavStokes":
        {
                "Coeff":
                {
                    "DensNeg":            845.442,      // density of the droplet
                    "ViscNeg":            0.003281,     // dynamic viscosity of the droplet
                    "DensPos":            986.506,      // density of the surrounding fluid
                    "ViscPos":            0.001388,     // dynamic viscosity of the surrounding fluid.
                    "SurfTens":
                    {
                        "SurfTension":    0.00163,      // surface tension coefficient
                        "VarTensionFunc": "ConstTau"    // function for variable surface tension
                    },

                    "Gravity":            [0, -9.81, 0 ],  // gravity vector
                    "VolForce":           "ZeroVel"        // r.h.s. force of navier stokes
                                                           // equations (default: 'ZeroVel')
                },

                "InitialValue":         0,                 // initial conditions (0 = zero, 1/2 = stationary
                                                           // flow with/without droplet).   //TODO : Entferne -1 aus DROPS
       
                "XFEMReduced":          0.0,    // threshold for discarding additional dof parameters in
                                                // the XFEM pressure space (0=keep all). Using a negative value
                                                // yields the standard FEM pressure space.
                "GhostPenalty":         0.001,  // ghost penalty stabilization used for pressure xfem space

                "BoundaryData":
                {
                    "Velocity":
                    {
                        "Default":              ["Dir0BC"],     // optional; if not set UndefinedBC_ is the default.
                        "PeriodicMatching":     "periodicz",    // optional

                        "0":    ["Dir0BC"],                     // indices refer to boundary segment
                        "1":    ["DirBC", "ZeroVel"],
                        "4":   ["Per1BC"],
                        "5":   ["Per2BC"]
                    },
                    "Pressure":
                    {
                        "Default":        ["NoBC"]
                    }
                },

                //TODO eigentlich sind das Randbedingungen fuer die Messzelle, oder? -> DELETE
                "FlowDir":              1,                         // direction of the flow at the inlet.
                                                                   // FlowDir = 0 / 1 / 2 describes the
                                                                   // x- / y- / z-direction. If the flow
                                                                   // is orientated in negative coordinate
                                                                   // direction, a minus sign must be used
                                                                   // for the parameter InflowVel.
                "InflowVel":            0,                         // magnitude of the inflow velocity.
                "RadInlet":             0.005,                     // radius of the circular intake.
                "InflowFreq":           0,                         // inflow frequency.
                "InflowAmpl":           0                          // inflow amplitude.

        },

        "Levelset":
        {
                "InitialValue":   "Ellipsoid",                     // choose a Levelset function you want
                                                                   // to start with (default: 'Ellipsoid')
                "RadDrop":              [ 0.25, 0.25, 0.25 ], // radii of the ellipsoidal droplet at
                                                                   // initial time.
                                                                   // ( ! Attention: If RadDrop is negative,
                                                                   // a flow without a droplet is simulated)
                "PosDrop":              [ 0.5, 0.5, 0.5 ], // position of the droplet's center at
                                                                   // initial time.
                "SD":                   0.1,    // parameter controls the stability of the advection equation
                                                // by streamline diffusion
                "CurvDiff":             -1,     // smoothing of level set function before the discretization
                                                // of the curvature term. ( ! Attention: The smoothing is only
                                                // applied on temporary variables used for the curvature
                                                // calculation. The interface remains unchanged.)
                
                "Discontinuous":         0,      // Use DG for levelset?

                "BoundaryData":
                {
                        "Default":      ["NoBC"]
                },

                "VolCorrection":        1,      // control of the volume correction. For VolCorrection = 0 no
                                                // correction is made and for VolCorrection = 1 it is carried
                                                // out after each time step and reparameterization of the level
                                                // set function.

                // re-initialization of levelset function",
               "Reparam":
               {
                    "Freq":                 1,      // number of timesteps before the levelset function is
                                                    // reparameterized. Freq = 0 deactivates the reparameterization.
                    "Method":               11,     // Method how to determine distance of frontier vertices and
                                                    // propagation scheme, see documentation of ReparamFactoryCLfor
                                                    // a detailed description
                    "MinGrad":              0.1,    // minimal allowed norm of the gradient of the levelset function.
                    "MaxGrad":              10      // maximal allowed norm of the gradient of the levelset function.
                }
        },



// mass transport
        "Transp": //TODO CL: Aufspalten in MassTranspSolver und Rest? weitere Parameter?
        {
                "Solver":
                {
                    "Iter":             200,    // maximum number of iterations.
                    "Tol":              1e-10   // tolerance.
                },

                "BoundaryData":
                {
                        "Default":      ["Nat0BC"]
                },

                "DiffPos":              0.005,  // diffusion coefficient (positive part).
                "DiffNeg":              0.01,   // diffusion coefficient (negative part).
                "HenryPos":             1,      // Henry scaling number outside the droplet     //TODO warum gibt es ZWEI Henry-Konstanten
                "HenryNeg":             0.5,    // Henry scaling number inside the droplet
                "IniCPos":              0.1,    // initial concentration (positive part).
                "IniCNeg":              5,      // initial concentration (negative part).
                "NitschePenalty":       50,     // inactive! Penalty parameter for Nitsche formulation
                "XFEMReduced":          0.05    // threshold for discarding extending dof parameters.
        },

// surfactant transport
        "SurfTransp": //TODO: JG: bessere Kommentare, Aufspalten in Solver + Rest? neue Parameter (DG/CGDG/...)?
        {
                "Solver":
                {
                    "Iter":             1000,   // maximum number of iterations.
                    "Tol":              1e-10   // tolerance.
                },

                "XFEMReduced":          -1.0,   // reduction of traceFEM space. Negative number keeps all basis functions.
                "Visc":                 1e-5    // diffusion coefficient
        },


// Visualization Toolkit output format settings
        "VTK":
        {
                "Freq":                 1,                 // VTK output (0 = off, n>0 = write every n-th step).
                "VTKDir":               "vtk",             // local directory for VTK files.
                "VTKName":              "risingdroplet",           // name of VTK files
                "Binary":               1                  // write out VTK files in binary format.
        },

// write out results, read in for restart
        "Restart":
        {
                "OutputFreq":           0,                 // run serialization (0 = off, n>0 = write every n-th step).
                "OutputOverwrite":      1,                 // overwrite old output-files or create new ones
                                                           // for every time step.
                                                           // (0 = every step a new file, n>0 generate n files in total)
                "OutputGrid":           "out/grid",        // writes multigrid to serialization files
                                                           // (to deactivate the writing choose OutputGrid = "").
                "OutputData":           "out/data",        // writes FE solutions
                                                           // (to deactivate the writing choose OutputData = "").
                                                           // "InputGrid"... does not exist; set "Mesh.RestartFile" above.
                "InputData":            "",                // reads FE solutions
                                                           // (to deactivate choose InputData = "").
                "Binary":               1                  // use binary format
        },


        "DomainCond":
       {
                "PeriodicMatching":     "none",            // matching function 
                                                           // identifier for periodic boundaries
                "InitialCond":          0,                 // initial conditions (0 = zero, 1/2 = stationary
                                                              // flow with/without droplet, -1 = read from file).
                     "InitialFile":          "mg/data",         // file prefix when reading data for initial condition.
                   "BoundaryType":         "0!0!0!0!0!0",     // List of boundary types separated by a !.
                                                              // Each defining a boundary type for one boundary
                                                                  // domain ( The following indices may be used:
                                                                  //          Dir0BC= 0, DirBC= 2, Per1BC= 13,
                                                              //          Per2BC= 11, Nat0BC= 21, NatBC= 23,
                                                              //          NoBC= 98, UndefinedBC_= 99        ).
                       "BoundaryFncs":         "ZeroVel!ZeroVel!ZeroVel!ZeroVel!ZeroVel!ZeroVel"
                                                                  // List of boundary functions separated by a !.
                                                                  // Each string defines a function which is taken
                                                                  // from a function container during runtime.
               }


} 
