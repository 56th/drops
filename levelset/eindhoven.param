#=============================================================
#    DROPS parameter file for twophasedrops
#    simulation of two-phase flow:
#    droplet in brick
#=============================================================

# time stepping
Time {
  NumSteps      = 100
  StepSize      = 5e-4
  Scheme        = 1         # time integration: 1=linthetascheme, 2=recthetascheme, 3=, 4=operator splitting, 5=cranknicolson
}

# flow solver
Stokes {
  InnerIter     =       50
  OuterIter     =       200
  InnerTol      =       0.6
  OuterTol      =       1e-12
  StokesMethod  =       20302   # 1*= GCR, 2*= InexactUzawa, 3*= MinRes, 4*= GMRes, 5*= GMResR
  PcAIter       =       100     # V-cycles multigrid, iter pc for A block
  PcATol        =       1e-2    # only for efficiency abs. resid, (gmres, pcg, bicgstab rel. resid: 1e-2)
  PcSTol        =       1e-4
  XFEMStab      =       1e-1
  Theta         =       1       # backward Euler
}

NavStokes {
  Nonlinear     = 0         # 1 = Navier Stokes; 0 = Stokes
  Tol           = 1e-10     # 0.1 for recthetascheme
  Iter          = 20
  Reduction     = 0.1
}

# levelset solver
Levelset {
  Tol           = 1e-14
  Iter          = 1000
  SD            = 0.1       # streamline diffusion parameter
  CurvDiff      = -1
  VolCorrection = 1         # volume correction every n steps
  Theta         = 1         # backward Euler
}

Coupling {
  Tol           = 1e-10     # for recthetascheme
  Iter          = 10        # -1 = till convergence
  Stab          = 1.0       # laplace beltrami stabilization
  Projection    = 0         # only thetascheme: 1 = Perform a projection step before FP
}

# re-initialization of levelset function
Reparam {
  Freq          = 1         # reparametrization every n steps
  Method        = 03        # see ReparamFactorCL for documentation
  MinGrad       = 0.1       # minimal allowed norm of the gradient of phi
  MaxGrad       = 10        # maximal allowed norm of the gradient of phi
  NarrowBand    = -1.0      # Narrow-Band method, if euclidian reparametrization is used
}

# adaptive refinement
AdaptRef {
  Freq          = 10        # adaptive refinement every n steps
  FinestLevel   = 2         # finest level used in refinement strategy
  CoarsestLevel = 0
  Width         = 1e-6
  LoadBalStrategy= 1	# 0 - No Migration, 1 - Adaptive, 2 - Recursive
  Partitioner    = 1	# 1 - Metis, 2 - Zoltan, 3 - Scotch
}

# material data, all units are SI
Mat {
  DensDrop      = 749.000   # dodecane - water
  ViscDrop      = 1.589e-3
  DensFluid     = 998.000
  ViscFluid     = 1.002e-3
  SmoothZone    = 1e-4
}

# experimental conditions
Exp {
  RadDrop       = 20e-6   20e-6   20e-6
  PosDrop       = 30e-6   25e-6   50e-6
  Gravity       = 0     -9.81   0
  FlowDir       = 1         # flow in y-direction
  InflowVel     = 0.04e-3
  RadInlet      = 5e-3      # 3.5e-3 for old meas. cell
  InflowFreq    = 0         # inflow frequence
  InflowAmpl    = 0         # inflow amplitude
}

# surface tension
SurfTens {
  VarTension    = 0         # 0=off, 1=on
  SurfTension   = 46.00e-3   # surface tension coefficient
  JumpWidth     = 5e-4      # jump width
  RelPos        = 1.5       # position of the jump between upper edge (lambda=0) and barycenter (lambda=1)
  DirtFactor    = 0.8       # red. factor for surface tension (due to contamination) in lower droplet)
}

# mass transport
Transp {
  DoTransp        = 0         # 0=off, 1=on
  Theta           = 0.5       # time integration theta scheme
  Iter            = 200
  Tol             = 1e-10
  DiffPos         = 5e-3      # diffusion coefficient (pos. part)
  DiffNeg         = 1e-2      # diffusion coefficient (neg. part)
  HPos            = 1         # Henry condition: Hneg * cneg = Hpos * cpos
  HNeg            = 0.5       # Henry condition: Hneg * cneg = Hpos * cpos
  IniCPos         = 0.1       # initial concentration (pos. part)
  IniCNeg         = 5         # initial concentration (neg. part)
  NitschePenalty  = 0
  NitscheXFEMStab = 0.1
}

# surfactant transport
SurfTransp {
  DoTransp      = 0         # 0=off, 1=on
  Theta         = 0.5
  Iter          = 1000
  Tol           = 1e-10
  OmitBound     = -1.       # keeps all dof
  Visc          = 1e-5      # interfacial diffusion coefficient
}

# Ensight settings
Ensight {
  EnsightOut    = 1
  EnsCase       = eindhoven
  EnsDir        = ensight
  Binary        = 0          # 1 = binary output, 0 = ascii output
  MasterOut     = 1
  GeomName      = channel
}

#VTK output
VTK{
  VTKOut        = 0
  VTKDir        = vtk
  VTKName       = channel
  Binary        = 0
}

# Write out results
Restart {
  Serialization = 1
  Overwrite     = 2
  Inputfile     = none
  Outputfile    = ./geometry/eindhoven
  Binary        = 0		# no effect
}

# domain, bnd/ini conditions
DomainCond {
  InitialCond   = 0	  # 0=zero, 1/2=flow with/without drop, -1=read from file
  GeomType      = 1	  # 0=ReadMeshBuilder, 1=BrickBuilder
  InitialFile   = none
  MeshFile      = 500e-6x50e-6x100e-6@25x5x10
  BoundaryType  = 4   # boundary type: 0= meas. cell, 1= hom. Dirichlet, 2= inhom. Dirichlet, 3= tube, 4= microchannel
}
