#=============================================================
#    DROPS parameter file for twophasedrops
#    simulation of two-phase flow:
#    droplet in a cuboid
#=============================================================

# time stepping
Time {
    NumSteps      = 10        # number of timesteps
    StepSize      = 0.125     # time step size
    Scheme        = 1         # time integration scheme, see mzelle_hdr.h::CreateTimeDisc(...) for details
}

# flow solver
Stokes {
    StokesMethod  = 10101     # see num/stokessolverfactory.h for details
    InnerIter     = 1000      # max number of iterations of the inner solver
    OuterIter     = 200       # max number of iterations of the outer solver
    InnerTol      = 0.6       # inner reduction/tolerance for InexactUzawa
    OuterTol      = 1e-8      # stopping criterion for the outer iteration
    PcAIter       = 2         # V-cycles multigrid, iter pc for A block
    PcATol        = 1e-99     # abs. resid for multigrid, otherwise rel. resid
    PcSTol        = 1e-4      # resid for schur complememt preconditioner
    XFEMStab      = 0.1       # threshold for discarding ext. dofs parameter, default 0.1
    Theta         = 1         # 0=FwdEuler, 1=BwdEuler, 0.5=CrankNicholson
}

NavStokes {
    Nonlinear     = 1         # magnitude of nonlinear term, 1 = Navier Stokes; 0 = Stokes
    Tol           = 1e-10     # tolerance of the Navier-Stokes-solver
    Iter          = 20        # maximal number of iterations of the solver
    Reduction     = 0.1       # the Oseen-residual is reduced by this factor (<1.0)
}

# levelset solver
Levelset {
    Tol           = 1e-14     # tolerance for Level Set solver
    Iter          = 1000      # max. number of iterations for Level Set solver
    SD            = 0.1       # streamline diffusion parameter
    CurvDiff      = -1        # smoothing of Level Set function before curvature term discretization
    VolCorrection = 1         # volume correction every n steps
    Theta         = 1         # 0=FwdEuler, 1=BwdEuler, 0.5=CrankNicholson
}

Coupling {
    Tol           = 1e-10     # tolerance for the coupling (not always used)
    Iter          = 20        # max. number of iterations for the fixed-point iteration; -1 = till convergence
    Stab          = 1.0       # Laplace-Beltrami-stabilization
    Projection    = 0         # only thetascheme: 1 = Perform a projection step before FP (not implemented a.t.m.)
}

# re-initialization of levelset function
Reparam {
    Freq          = 1         # number of timesteps before reparametrize the level-set function
    Method        = 03        # method of reparametrize level-set function, see ReparamFactorCL for documentation
    MinGrad       = 0.1       # minimal allowed norm of the gradient of phi
    MaxGrad       = 10        # maximal allowed norm of the gradient of phi
    NarrowBand    = -1.0      # Narrow-Band method for the Euclidian method (e.g. 0.5 : all dof with <50% of the maximal level-set value are considered)
}

# adaptive refinement
AdaptRef {
    Freq          = 1         # adaptive refinement every n steps
    FinestLevel   = 2         # finest level in the near of the phase boundary
    CoarsestLevel = 0         # coarsest level in the near of the phase boundary
    Width         = 0.1       # domain of refinement
    LoadBalStrategy= 1	      # 0 - No Migration, 1 - Adaptive, 2 - Recursive
    Partitioner    = 1        # 1 - Metis, 2 - Zoltan, 3 - Scotch
}

# material data, all units are SI
Mat {
    DensDrop      = 1
    ViscDrop      = 10
    DensFluid     = 10
    ViscFluid     = 1
    SmoothZone    = 0.05
}

# experimental conditions
Exp {
    RadDrop       = 0.25  0.25  0.25      # radii of the ellipsoidal droplet
    PosDrop       = 0.5   0.5   0.5       # position of the droplet
    Gravity       = 0     0    -9.81      # gravity force
    FlowDir       = 0                     # no effect
    InflowVel     = 0                     # max. inflow velocity (parabolic profile)
    RadInlet      = 1                     # radius at inlet of measuring device, 3.5e-3 for old meas. cell
    InflowFreq    = 0                     # inflow frequence
    InflowAmpl    = 0                     # inflow amplitude
}

# surface tension
SurfTens {
    VarTension    = 0         # 0=off, 1=on
    SurfTension   = 1         # surface tension coefficient
    JumpWidth     = 5e-4      # jump width
    RelPos        = 1.5       # position of the jump between upper edge (lambda=0) and barycenter (lambda=1)
    DirtFactor    = 0.8       # red. factor for surface tension (due to contamination) in lower droplet)
}

# mass transport
Transp {
    DoTransp      = 0         # 0=off, 1=on
    Theta         = 0.5       # time integration theta scheme
    Iter          = 200       # max. number of iterations
    Tol           = 1e-10     # stopping criterion
    DiffPos       = 5e-3      # diffusion coefficient (pos. part)
    DiffNeg       = 1e-2      # diffusion coefficient (neg. part)
    HPos          = 1         # Henry condition: Hneg * cneg = Hpos * cpos
    HNeg          = 0.5       # Henry condition: Hneg * cneg = Hpos * cpos
    IniCPos       = 0.1       # initial concentration (pos. part)
    IniCNeg       = 5         # initial concentration (neg. part)
    NitschePenalty  =  0      # Nitsche penalty term
    NitscheXFEMStab =  0.1    # threshold for discarding ext. dofs parameter, default 0.1
}

# surfactant transport
SurfTransp {
    DoTransp      = 0         # surfactant transport on (1) or off (0)
    Theta         = 0.5       # 0=FwdEuler, 1=BwdEuler, 0.5=CrankNicholson
    Iter          = 1000      # iterations of solver for surfactant equation
    Tol           = 1e-10     # tolerance of solver for surfactant equation
    OmitBound     = -1.       # omit dof with small mass on the interface, -1 = keeps all dof
    Visc          = 1e-5      # interfacial diffusion coefficient
}

# Ensight settings
Ensight {
    EnsightOut    = 0              # Ensight output
    EnsCase       = risingdroplet  # name of Ensight case
    EnsDir        = ensight        # local directory for Ensight files
    Binary        = 0              # 1 = binary output, 0 = ascii output
    MasterOut     = 1              # only master writes out ensight files
    GeomName      = Brick          # name for the geometry
}

#VTK output
VTK{
    VTKOut        = 1              # VTK output
    VTKDir        = vtk            # local directory for vtk files
    VTKName       = risingdroplet  # name of vtk files
    Binary        = 1              # write out VTK files in binary format
}

# Write out results, read in for restart
Restart {
    Serialization = 0              # perform serialization every n steps
    Overwrite     = 1              # overwrite old output-files or create new for every step
    Inputfile     = none           # reads multigrid from deserialization files, special value "none" to ignore
    Outputfile    = mg/data        # writes multigrid and numerical data to serialisation files
    Binary        = 0              # no effect
}

# domain, bnd/ini conditions
DomainCond {
    InitialCond   = 0              # 0=zero, 1/2=flow with/without drop, -1=read from file (see Inputfile), -10=read from ensight file
    GeomType      = 1              # specifies the used geometry (0=ReadMeshBuilder, 1=BrickBuilder)
    InitialFile   = mg/data        # file prefix when reading data for initial condition
    MeshFile      = 1x1x2@3x3x6    #./gambit/messzelle.msh    # mesh file (created by GAMBIT, FLUENT/UNS format) or dimensions of a cuboid (e.g. 2x3x4\@5x6x7)
    BoundaryType  = 0!0!0!0!0!0    # Dir0BC= 0, DirBC= 2, Per1BC= 13, Per2BC= 11, Nat0BC= 21, NatBC= 23, NoBC= 98, UndefinedBC_= 99 
    BoundaryFncs  = ZeroVel!ZeroVel!ZeroVel!ZeroVel!ZeroVel!ZeroVel   #InflowBrick!InflowBrick!InflowBrick!InflowCell!InflowCell!ZeroVel
}
